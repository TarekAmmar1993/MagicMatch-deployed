{"version":3,"sources":["components/singleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","console","log","cardImages","matched","App","useState","cards","setCards","turns","setTruns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","useEffect","setTimeout","resetTurn","shuffleCards","shuffledCards","sort","Math","random","map","id","previousTurn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQACe,SAASA,EAAT,GAA4D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,aAAaC,EAAmB,EAAnBA,QAAQC,EAAW,EAAXA,SAM3D,OACI,sBAAKC,UAAU,OAAf,UACI,sBAAKA,UAAWF,EAAU,UAAW,GAArC,UACI,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBAAKF,UAAU,OACVC,IAAI,gBACJE,QAXG,WACZJ,GACAF,EAAaD,IAUJM,IAAI,iBAGZE,QAAQC,SCbrB,IAAIC,EAAW,CACX,CAAC,IAAO,mBAAmBC,SAAQ,GACnC,CAAC,IAAO,mBAAmBA,SAAQ,GACnC,CAAC,IAAO,iBAAiBA,SAAQ,GACjC,CAAC,IAAO,mBAAmBA,SAAQ,GACnC,CAAC,IAAO,mBAAmBA,SAAQ,GACnC,CAAC,IAAO,kBAAkBA,SAAQ,IA8EvBC,MA3Ef,WACI,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAyBF,mBAAS,GAAlC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA+BR,oBAAS,GAAxC,mBAAOV,EAAP,KAAgBmB,EAAhB,KAEAC,qBAAU,WAEHL,GAAaE,IACZE,GAAY,GACTJ,EAAUb,MAAQe,EAAUf,MAC3Ba,EAAUP,SAAU,EACpBS,EAAUT,SAAU,GAGxBa,YAAW,kBAAMC,MAAY,QAEnC,CAACP,EAAUE,IAGbG,qBAAU,WACNG,MACF,IAGF,IAAMA,EAAe,WACjB,IAAMC,EAAgB,UAAIjB,EAAcA,GACnCkB,MAAK,kBAAMC,KAAKC,SAAS,MACzBC,KAAI,SAAC/B,GAAD,mBAAC,eAAaA,GAAd,IAAmBgC,GAAGH,KAAKC,cACpCX,EAAa,MACbE,EAAa,MACbN,EAASY,GACTV,EAAS,IAIPhB,EAAc,SAACD,GACjBkB,EAAYG,EAAarB,GAAQmB,EAAanB,IAI5CyB,EAAY,WACdN,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAgB,GAAY,OAAIA,EAAc,KACxCX,GAAY,IAQjB,OALEC,qBAAU,WACNG,MACF,IAIF,sBAAKtB,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASmB,EAAjB,sBAEA,qBAAKtB,UAAU,YAAf,SACKU,EAAMiB,KAAI,SAAA/B,GAAI,OACX,cAACD,EAAD,CACYC,KAAMA,EACNC,aAAgBA,EAChBC,QAAWF,IAASkB,GAAalB,IAASoB,GAAapB,EAAKW,QAC5DR,SAAWA,GAJNH,EAAKgC,SAS5B,uCAAUhB,SC9ElBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6fb9859a.chunk.js","sourcesContent":["import './singleCard.css';\nexport default function SingleCard({card, handleChoice,flipped,disabled} ){\n    const handleClick = () => {\n        if(!disabled){\n            handleChoice(card);\n        }\n    }\n    return(\n        <div className=\"card\">\n            <div className={flipped ? \"flipped\": \"\"}>\n                <img className=\"front\" src={card.src} alt=\"card front\" />\n                <img className=\"back\"\n                     src=\"img/cover.png\"\n                     onClick={handleClick}\n                     alt=\"card back\"\n                />\n            </div>\n            {console.log()}\n        </div>\n    )\n}","import './App.css'\nimport {useEffect, useState} from \"react\";\nimport SingleCard from \"./components/singleCard\";\n\nlet cardImages=[\n    {\"src\": 'img/helmet-1.png',matched:false},\n    {\"src\": \"img/potion-1.png\",matched:false},\n    {\"src\": \"img/ring-1.png\",matched:false},\n    {\"src\": \"img/scroll-1.png\",matched:false},\n    {\"src\": \"img/shield-1.png\",matched:false},\n    {\"src\": \"img/sword-1.png\",matched:false}\n]\n\nfunction App() {\n    const [cards,setCards] = useState([]);\n    const [turns,setTruns] = useState(0);\n    const [choiceOne, setChoiceOne] = useState(null);\n    const [choiceTwo, setChoiceTwo] = useState(null);\n    const [disabled,setDisabled] = useState(false);\n\n    useEffect(() => {\n\n        if(choiceOne && choiceTwo){\n            setDisabled(true);\n            if(choiceOne.src === choiceTwo.src){\n                choiceOne.matched = true;\n                choiceTwo.matched = true;\n            }\n            //console.log(choiceOne.src +\"vs: \"+choiceTwo.src)\n            setTimeout(() => resetTurn(),1000);\n        }\n    },[choiceOne,choiceTwo])\n\n    //start the game automatically\n    useEffect(() =>{\n        shuffleCards()\n    },[])\n\n\n    const shuffleCards = () => {\n        const shuffledCards = [...cardImages,...cardImages]\n            .sort(() => Math.random()-0.5)\n            .map((card) =>({...card,id:Math.random()}))\n        setChoiceOne(null);\n        setChoiceTwo(null);\n        setCards(shuffledCards);\n        setTruns(0);\n\n    }\n    //handle choice\n    const handleChoice =(card) => {\n        choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n    }\n\n    //reset choices\n    const resetTurn = () =>{\n        setChoiceOne(null);\n        setChoiceTwo(null);\n        setTruns(previousTurn => previousTurn +1)\n       setDisabled(false);\n    }\n    //start the game automatically\n    useEffect(() =>{\n        shuffleCards()\n    },[])\n\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n          {cards.map(card =>(\n              <SingleCard key={card.id}\n                          card={card}\n                          handleChoice = {handleChoice}\n                          flipped = {card === choiceOne || card === choiceTwo || card.matched}\n                          disabled ={disabled}\n              />\n          ))\n          }\n      </div>\n        <p>Turn: {turns}</p>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}